import string #импортируется модуль string
from random import choice, shuffle # импортируются методы choice, shuffle из модуля random

chars1 = [с for с in string.ascii_uppercase if с not in 'OI'] #chars1 присваиваем все большие латинские буквы кроме "O" и "I"(список)
chars2 = [с for с in string.ascii_lowercase if с not in 'ol'] #присваиваем chars2 все маленькие латинские буквы кроме "o" и "l"(список)
chars3 = list(string.digits[2:]) #chars3 присваеиваем все цифры кроме 0 и 1(список)
chars = chars1 + chars2 + chars3 # переменной chars присваиваем все символы из chars1, chars2, chars3 то есть все доступные по условию задачи(список)

def generate_password(length):#объявляется функция и принимает значение length которое вводится пользователем
    # в переменную result добавляем по 1 случайному значению из переменных chars1, chars2, chars3 - тоесть 1 большая буква,
    # одна маленькая и одна цифра, что требуется по условию задачи "Дополнительное условие: в каждом пароле обязательно д
    # олжна присутствовать хотя бы одна цифра и как минимум по одной букве в верхнем и нижнем регистре."
    # дальше берем range(3, length) случайных символов choice(chars) из chars и все это закидываем в result.
    # по итогу получается что в переменной result у на схранится список с 1 большой латинской буквой, 1 маленькой и 1 числом
    # и 7 случайных символов из chars. Тоесть мы получили пароль который требуется сгенерировать по условию задачи.
    result = [choice(i) for i in (chars1, chars2, chars3)] + [choice(chars) for _ in range(3, length)]
    shuffle(result) # тут мы перемешиваем все что есть в переменной result для пущей хаотичности
    return ''.join(result) # а тут склеиваем все в строку

def generate_passwords(count, length): #тут объявляется функция которая принимает на вход количество паролей которые необходимо
    # сгенерировать и длинну пароля
    result = set() # тут мы переменной result присваиваем значение пустого множества
    while len(result) < count: #запускаем цикл, до тех пор пока не сгенерируем нужное количество паролей
        # поскольку result это множество, все повторяющиеся элементы будут пуфаться и мы получим нужное нам количество
        # уникальных паролей
        result.add(generate_password(length)) # добавляем в result строку сгенерированную в generate_password(length)
    return list(result) #тут делаем из result список и возвращаем его

for i in generate_passwords(int(input()), int(input())): #тут вызываем генератор паролей и сразу проходимся по списку циклом
    print(i)# ну а тут на каждой итерации выводим по одному наши парольчики